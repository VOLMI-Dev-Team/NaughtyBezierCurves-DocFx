{
  "api/NaughtyBezierCurves.BezierCurve3D.html": {
    "href": "api/NaughtyBezierCurves.BezierCurve3D.html",
    "title": "Class BezierCurve3D | NaughtyBezierCurves",
    "keywords": "Class BezierCurve3D Namespace NaughtyBezierCurves Assembly NaughtyBezierCurves.Core.dll public class BezierCurve3D : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BezierCurve3D Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties KeyPoints public List<BezierPoint3D> KeyPoints { get; } Property Value List<BezierPoint3D> KeyPointsCount public int KeyPointsCount { get; } Property Value int Sampling public int Sampling { get; set; } Property Value int Methods AddKeyPoint() Adds a key point at the end of the curve public BezierPoint3D AddKeyPoint() Returns BezierPoint3D The new key point AddKeyPointAt(int) Add a key point at a specified index public BezierPoint3D AddKeyPointAt(int index) Parameters index int The index at which the key point will be added Returns BezierPoint3D The new key point GetApproximateLength() public float GetApproximateLength() Returns float GetApproximateLengthOfCubicCurve(BezierPoint3D, BezierPoint3D, int) public static float GetApproximateLengthOfCubicCurve(BezierPoint3D startPoint, BezierPoint3D endPoint, int sampling) Parameters startPoint BezierPoint3D endPoint BezierPoint3D sampling int Returns float GetApproximateLengthOfCubicCurve(Vector3, Vector3, Vector3, Vector3, int) public static float GetApproximateLengthOfCubicCurve(Vector3 startPosition, Vector3 endPosition, Vector3 startTangent, Vector3 endTangent, int sampling) Parameters startPosition Vector3 endPosition Vector3 startTangent Vector3 endTangent Vector3 sampling int Returns float GetBinormal(float, Vector3) public Vector3 GetBinormal(float time, Vector3 up) Parameters time float up Vector3 Returns Vector3 GetBinormalOnCubicCurve(float, Vector3, BezierPoint3D, BezierPoint3D) public static Vector3 GetBinormalOnCubicCurve(float time, Vector3 up, BezierPoint3D startPoint, BezierPoint3D endPoint) Parameters time float up Vector3 startPoint BezierPoint3D endPoint BezierPoint3D Returns Vector3 GetBinormalOnCubicCurve(float, Vector3, Vector3, Vector3, Vector3, Vector3) public static Vector3 GetBinormalOnCubicCurve(float time, Vector3 up, Vector3 startPosition, Vector3 endPosition, Vector3 startTangent, Vector3 endTangent) Parameters time float up Vector3 startPosition Vector3 endPosition Vector3 startTangent Vector3 endTangent Vector3 Returns Vector3 GetCubicSegment(float, out BezierPoint3D, out BezierPoint3D, out float) public void GetCubicSegment(float time, out BezierPoint3D startPoint, out BezierPoint3D endPoint, out float timeRelativeToSegment) Parameters time float startPoint BezierPoint3D endPoint BezierPoint3D timeRelativeToSegment float GetNormal(float, Vector3) public Vector3 GetNormal(float time, Vector3 up) Parameters time float up Vector3 Returns Vector3 GetNormalOnCubicCurve(float, Vector3, BezierPoint3D, BezierPoint3D) public static Vector3 GetNormalOnCubicCurve(float time, Vector3 up, BezierPoint3D startPoint, BezierPoint3D endPoint) Parameters time float up Vector3 startPoint BezierPoint3D endPoint BezierPoint3D Returns Vector3 GetNormalOnCubicCurve(float, Vector3, Vector3, Vector3, Vector3, Vector3) public static Vector3 GetNormalOnCubicCurve(float time, Vector3 up, Vector3 startPosition, Vector3 endPosition, Vector3 startTangent, Vector3 endTangent) Parameters time float up Vector3 startPosition Vector3 endPosition Vector3 startTangent Vector3 endTangent Vector3 Returns Vector3 GetPoint(float) Evaluates a position along the curve at a specified normalized time [0, 1] public Vector3 GetPoint(float time) Parameters time float The normalized length at which we want to get a position [0, 1] Returns Vector3 The evaluated Vector3 position GetPointOnCubicCurve(float, BezierPoint3D, BezierPoint3D) public static Vector3 GetPointOnCubicCurve(float time, BezierPoint3D startPoint, BezierPoint3D endPoint) Parameters time float startPoint BezierPoint3D endPoint BezierPoint3D Returns Vector3 GetPointOnCubicCurve(float, Vector3, Vector3, Vector3, Vector3) public static Vector3 GetPointOnCubicCurve(float time, Vector3 startPosition, Vector3 endPosition, Vector3 startTangent, Vector3 endTangent) Parameters time float startPosition Vector3 endPosition Vector3 startTangent Vector3 endTangent Vector3 Returns Vector3 GetRotation(float, Vector3) public Quaternion GetRotation(float time, Vector3 up) Parameters time float up Vector3 Returns Quaternion GetRotationOnCubicCurve(float, Vector3, BezierPoint3D, BezierPoint3D) public static Quaternion GetRotationOnCubicCurve(float time, Vector3 up, BezierPoint3D startPoint, BezierPoint3D endPoint) Parameters time float up Vector3 startPoint BezierPoint3D endPoint BezierPoint3D Returns Quaternion GetRotationOnCubicCurve(float, Vector3, Vector3, Vector3, Vector3, Vector3) public static Quaternion GetRotationOnCubicCurve(float time, Vector3 up, Vector3 startPosition, Vector3 endPosition, Vector3 startTangent, Vector3 endTangent) Parameters time float up Vector3 startPosition Vector3 endPosition Vector3 startTangent Vector3 endTangent Vector3 Returns Quaternion GetTangent(float) public Vector3 GetTangent(float time) Parameters time float Returns Vector3 GetTangentOnCubicCurve(float, BezierPoint3D, BezierPoint3D) public static Vector3 GetTangentOnCubicCurve(float time, BezierPoint3D startPoint, BezierPoint3D endPoint) Parameters time float startPoint BezierPoint3D endPoint BezierPoint3D Returns Vector3 GetTangentOnCubicCurve(float, Vector3, Vector3, Vector3, Vector3) public static Vector3 GetTangentOnCubicCurve(float time, Vector3 startPosition, Vector3 endPosition, Vector3 startTangent, Vector3 endTangent) Parameters time float startPosition Vector3 endPosition Vector3 startTangent Vector3 endTangent Vector3 Returns Vector3 OnDrawGizmos() protected virtual void OnDrawGizmos() RemoveKeyPointAt(int) Removes a key point at a specified index public bool RemoveKeyPointAt(int index) Parameters index int The index of the key point that will be removed Returns bool true - if the point was removed, false - otherwise"
  },
  "api/NaughtyBezierCurves.BezierPoint3D.HandleType.html": {
    "href": "api/NaughtyBezierCurves.BezierPoint3D.HandleType.html",
    "title": "Enum BezierPoint3D.HandleType | NaughtyBezierCurves",
    "keywords": "Enum BezierPoint3D.HandleType Namespace NaughtyBezierCurves Assembly NaughtyBezierCurves.Core.dll public enum BezierPoint3D.HandleType Fields Broken = 1 Connected = 0"
  },
  "api/NaughtyBezierCurves.BezierPoint3D.html": {
    "href": "api/NaughtyBezierCurves.BezierPoint3D.html",
    "title": "Class BezierPoint3D | NaughtyBezierCurves",
    "keywords": "Class BezierPoint3D Namespace NaughtyBezierCurves Assembly NaughtyBezierCurves.Core.dll public class BezierPoint3D : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour BezierPoint3D Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Properties Curve Gets or sets the curve that the point belongs to. public BezierCurve3D Curve { get; set; } Property Value BezierCurve3D HandleStyle Gets or sets the type/style of the handle. public BezierPoint3D.HandleType HandleStyle { get; set; } Property Value BezierPoint3D.HandleType LeftHandleLocalPosition Gets or sets the local position of the left handle. If the HandleStyle is Connected, the local position of the right handle is automaticaly set. public Vector3 LeftHandleLocalPosition { get; set; } Property Value Vector3 LeftHandlePosition Gets or sets the position of the left handle. If the HandleStyle is Connected, the position of the right handle is automaticaly set. public Vector3 LeftHandlePosition { get; set; } Property Value Vector3 LocalPosition Gets or sets the position of the transform. public Vector3 LocalPosition { get; set; } Property Value Vector3 Position Gets or sets the position of the transform. public Vector3 Position { get; set; } Property Value Vector3 RightHandleLocalPosition Gets or sets the local position of the right handle. If the HandleType is Connected, the local position of the left handle is automaticaly set. public Vector3 RightHandleLocalPosition { get; set; } Property Value Vector3 RightHandlePosition Gets or sets the position of the right handle. If the HandleType is Connected, the position of the left handle is automaticaly set. public Vector3 RightHandlePosition { get; set; } Property Value Vector3"
  },
  "api/NaughtyBezierCurves.Editor.BezierCurve3DEditor.html": {
    "href": "api/NaughtyBezierCurves.Editor.BezierCurve3DEditor.html",
    "title": "Class BezierCurve3DEditor | NaughtyBezierCurves",
    "keywords": "Class BezierCurve3DEditor Namespace NaughtyBezierCurves.Editor Assembly NaughtyBezierCurves.Editor.dll [CustomEditor(typeof(BezierCurve3D))] [CanEditMultipleObjects] public class BezierCurve3DEditor : Editor Inheritance object Object ScriptableObject Editor BezierCurve3DEditor Inherited Members Editor.CreateEditorWithContext(Object[], Object, Type) Editor.CreateEditorWithContext(Object[], Object) Editor.CreateCachedEditorWithContext(Object, Object, Type, ref Editor) Editor.CreateCachedEditorWithContext(Object[], Object, Type, ref Editor) Editor.CreateCachedEditor(Object, Type, ref Editor) Editor.CreateCachedEditor(Object[], Type, ref Editor) Editor.CreateEditor(Object) Editor.CreateEditor(Object, Type) Editor.CreateEditor(Object[]) Editor.CreateEditor(Object[], Type) Editor.DrawPropertiesExcluding(SerializedObject, params string[]) Editor.DrawDefaultInspector() Editor.Repaint() Editor.CreateInspectorGUI() Editor.RequiresConstantRepaint() Editor.DrawHeader() Editor.OnHeaderGUI() Editor.ShouldHideOpenButton() Editor.DrawFoldoutInspector(Object, ref Editor) Editor.HasPreviewGUI() Editor.GetPreviewTitle() Editor.RenderStaticPreview(string, Object[], int, int) Editor.OnPreviewGUI(Rect, GUIStyle) Editor.OnInteractivePreviewGUI(Rect, GUIStyle) Editor.OnPreviewSettings() Editor.GetInfoString() Editor.DrawPreview(Rect) Editor.ReloadPreviewInstances() Editor.UseDefaultMargins() Editor.MoveNextTarget() Editor.ResetTarget() Editor.target Editor.targets Editor.serializedObject Editor.finishedDefaultHeaderGUI ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Methods DrawPointsSceneGUI(BezierCurve3D, BezierPoint3D) public static void DrawPointsSceneGUI(BezierCurve3D curve, BezierPoint3D exclude = null) Parameters curve BezierCurve3D exclude BezierPoint3D OnEnable() protected virtual void OnEnable() OnInspectorGUI() Implement this function to make a custom inspector. public override void OnInspectorGUI() OnSceneGUI() protected virtual void OnSceneGUI()"
  },
  "api/NaughtyBezierCurves.Editor.BezierPoint3DEditor.html": {
    "href": "api/NaughtyBezierCurves.Editor.BezierPoint3DEditor.html",
    "title": "Class BezierPoint3DEditor | NaughtyBezierCurves",
    "keywords": "Class BezierPoint3DEditor Namespace NaughtyBezierCurves.Editor Assembly NaughtyBezierCurves.Editor.dll [CustomEditor(typeof(BezierPoint3D), true)] [CanEditMultipleObjects] public class BezierPoint3DEditor : Editor Inheritance object Object ScriptableObject Editor BezierPoint3DEditor Inherited Members Editor.CreateEditorWithContext(Object[], Object, Type) Editor.CreateEditorWithContext(Object[], Object) Editor.CreateCachedEditorWithContext(Object, Object, Type, ref Editor) Editor.CreateCachedEditorWithContext(Object[], Object, Type, ref Editor) Editor.CreateCachedEditor(Object, Type, ref Editor) Editor.CreateCachedEditor(Object[], Type, ref Editor) Editor.CreateEditor(Object) Editor.CreateEditor(Object, Type) Editor.CreateEditor(Object[]) Editor.CreateEditor(Object[], Type) Editor.DrawPropertiesExcluding(SerializedObject, params string[]) Editor.DrawDefaultInspector() Editor.Repaint() Editor.CreateInspectorGUI() Editor.RequiresConstantRepaint() Editor.DrawHeader() Editor.OnHeaderGUI() Editor.ShouldHideOpenButton() Editor.DrawFoldoutInspector(Object, ref Editor) Editor.HasPreviewGUI() Editor.GetPreviewTitle() Editor.RenderStaticPreview(string, Object[], int, int) Editor.OnPreviewGUI(Rect, GUIStyle) Editor.OnInteractivePreviewGUI(Rect, GUIStyle) Editor.OnPreviewSettings() Editor.GetInfoString() Editor.DrawPreview(Rect) Editor.ReloadPreviewInstances() Editor.UseDefaultMargins() Editor.MoveNextTarget() Editor.ResetTarget() Editor.target Editor.targets Editor.serializedObject Editor.finishedDefaultHeaderGUI ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Fields CircleCapSize public const float CircleCapSize = 0.075 Field Value float RectangeCapSize public const float RectangeCapSize = 0.1 Field Value float SphereCapSize public const float SphereCapSize = 0.15 Field Value float handleCapSize public static float handleCapSize Field Value float pointCapSize public static float pointCapSize Field Value float Methods DrawPointSceneGUI(BezierPoint3D) public static void DrawPointSceneGUI(BezierPoint3D point) Parameters point BezierPoint3D DrawPointSceneGUI(BezierPoint3D, CapFunction, CapFunction) public static void DrawPointSceneGUI(BezierPoint3D point, Handles.CapFunction drawPointFunc, Handles.CapFunction drawHandleFunc) Parameters point BezierPoint3D drawPointFunc Handles.CapFunction drawHandleFunc Handles.CapFunction OnEnable() protected virtual void OnEnable() OnInspectorGUI() Implement this function to make a custom inspector. public override void OnInspectorGUI() OnSceneGUI() protected virtual void OnSceneGUI()"
  },
  "api/NaughtyBezierCurves.Editor.html": {
    "href": "api/NaughtyBezierCurves.Editor.html",
    "title": "Namespace NaughtyBezierCurves.Editor | NaughtyBezierCurves",
    "keywords": "Namespace NaughtyBezierCurves.Editor Classes BezierCurve3DEditor BezierPoint3DEditor"
  },
  "api/NaughtyBezierCurves.html": {
    "href": "api/NaughtyBezierCurves.html",
    "title": "Namespace NaughtyBezierCurves | NaughtyBezierCurves",
    "keywords": "Namespace NaughtyBezierCurves Classes BezierCurve3D BezierPoint3D Enums BezierPoint3D.HandleType"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | NaughtyBezierCurves",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | NaughtyBezierCurves",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | NaughtyBezierCurves",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}